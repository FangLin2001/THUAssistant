export declare const cookies: {
    [key: string]: string;
};
/**
 * Clear the cookies.
 */
export declare const clearCookies: () => void;
/**
 * An enhanced implementation of `encodeURIComponent`, which supports
 * arbitrary charset.
 */
export declare const arbitraryEncode: (s: string, encoding?: string) => string;
/**
 * Converts form data into url-encoded format (utf-8).
 */
export declare const stringify: (form: any, paramEncoding?: string) => string;
/**
 * Gets the response data from the given `url`.
 *
 * If param `post` is provided, a `POST` request with the given post form will
 * be sent. Otherwise, a `GET` request will be sent.
 *
 * The `timeout` is `60000` by default, in milliseconds.
 *
 * The `paramEncoding` is `UTF-8` by default, used to encode post form params.
 *
 * If `serialized` is `true`, the method will treat `post` as a string that has
 * already been serialized.
 */
export declare const uFetch: (url: string, post?: object | undefined, timeout?: number, paramEncoding?: string, serialized?: boolean, requestContentType?: string) => Promise<string>;
export declare const getRedirectUrl: (url: string, timeout?: number) => Promise<string>;
