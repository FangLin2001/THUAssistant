export interface LibraryBase {
    id: number;
    zhName: string;
    zhNameTrace: string;
    enName: string;
    enNameTrace: string;
    valid: boolean;
}
export declare type Library = LibraryBase;
export declare type LibraryFloor = LibraryBase;
export interface LibraryDate {
    day: string;
    startTime: string;
    endTime: string;
    segmentId: number;
    today: boolean;
}
export interface LibrarySection extends Library {
    total: number;
    available: number;
    posX: number;
    posY: number;
}
export interface LibrarySeat extends Library {
    type: number;
}
export declare const weightedValidityAndId: (lib: LibraryBase) => number;
export declare const byId: (a: LibraryBase, b: LibraryBase) => number;
export interface LibBookRecord {
    id: string;
    pos: string;
    time: string;
    status: string;
    delId: string | undefined;
}
export declare const validLibName: readonly ["NORTH", "WEST", "LAW", "SOCIAL"];
export declare type LibName = typeof validLibName[number];
export interface LibRoomUsage {
    start: string;
    end: string;
    state: "doing" | "undo";
    title: string;
    occupy: boolean;
}
export interface LibRoomRes {
    id: string;
    name: string;
    loc: LibName;
    devId: number;
    devName: string;
    kindId: number;
    kindName: string;
    classId: number;
    className: string;
    labId: number;
    labName: string;
    roomId: number;
    roomName: string;
    buildingId: number;
    buildingName: string;
    limit: number;
    maxMinute: number;
    minMinute: number;
    cancelMinute: number;
    maxUser: number;
    minUser: number;
    openStart: string | null;
    openEnd: string | null;
    usage: LibRoomUsage[];
}
export interface LibFuzzySearchResult {
    id: string;
    label: string;
}
export interface LibRoomBookRecord {
    regDate: string;
    over: boolean;
    status: string;
    name: string;
    category: string;
    owner: string;
    members: string;
    begin: string;
    end: string;
    description: string;
    rsvId: string | undefined;
}
