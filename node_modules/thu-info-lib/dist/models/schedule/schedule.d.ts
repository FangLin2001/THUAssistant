export declare enum ScheduleType {
    PRIMARY = 0,
    SECONDARY = 1,
    EXAM = 2,
    CUSTOM = 3
}
export interface TimeBlock {
    week: number;
    dayOfWeek: number;
    begin: number;
    end: number;
}
export interface Schedule {
    name: string;
    location: string;
    activeTime: TimeBlock[];
    delOrHideTime: TimeBlock[];
    delOrHideDetail: TimeBlock[];
    type: ScheduleType;
}
export declare const activeWeek: (week: number, schedule: Schedule) => boolean;
export declare const mergeSchedules: (base: Schedule[]) => Schedule[];
export declare const mergeTimeBlocks: (schedule: Schedule) => void;
export declare const addActiveTimeBlocks: (week: number, dayOfWeek: number, begin: number, end: number, schedule: Schedule) => void;
export declare const getOverlappedBlock: (tester: Schedule, base: Schedule[]) => [TimeBlock, string, boolean][];
export declare const parseJSON: (json: any[], firstDay: string) => Schedule[];
export declare const parseSecondaryWeek: (src: string, callback: (week: number) => void) => boolean;
export declare const parseScript: (script: string, verbose?: boolean) => Schedule[] | [string, string, boolean][];
