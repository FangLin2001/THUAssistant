"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEleRemainder = exports.getElePayRecord = exports.getEleRechargePayCode = void 0;
const core_1 = require("./core");
const strings_1 = require("../constants/strings");
const cheerio_1 = __importDefault(require("cheerio"));
const alipay_1 = require("../utils/alipay");
const cheerio_2 = require("../utils/cheerio");
const network_1 = require("../utils/network");
const dorm_1 = require("../mocks/dorm");
const error_1 = require("../utils/error");
const getEleRechargePayCode = async (helper, money) => {
    await (0, core_1.roam)(helper, "myhome", "");
    const $ = await (0, network_1.uFetch)(strings_1.RECHARGE_ELE_URL).then(cheerio_1.default.load);
    const redirect = await (0, network_1.uFetch)(strings_1.RECHARGE_PAY_ELE_URL, {
        __EVENTTARGET: "",
        __EVENTARGUMENT: "",
        __VIEWSTATE: $("#__VIEWSTATE").attr().value,
        __VIEWSTATEGENERATOR: $("#__VIEWSTATEGENERATOR").attr().value,
        recharge_eleCtrl1$RadioButtonList1: "支付宝支付",
        write_money: money,
        username: $("input[name=username]").attr().value,
        louhao: $("input[name=louhao]").attr().value,
        room: $("input[name=room]").attr().value,
        student_id: $("input[name=student_id]").attr().value,
        banktype: "alipay",
    }, 60000, "GBK").then((s) => (0, cheerio_1.default)("#banksubmit", s));
    return (0, alipay_1.generalGetPayCode)(await (0, network_1.uFetch)(redirect.attr().action, redirect.serialize(), 60000, "UTF-8", true), "GBK");
};
exports.getEleRechargePayCode = getEleRechargePayCode;
const getElePayRecord = async (helper) => (0, core_1.roamingWrapperWithMocks)(helper, "myhome", "", async () => {
    const data = (await (0, network_1.uFetch)(strings_1.ELE_PAY_RECORD_URL).then(cheerio_1.default.load))(".myTable tr");
    if (data.length === 0)
        throw new error_1.EleError();
    return data.slice(1, data.length - 1)
        .map((index, element) => [
        element.children
            .filter((it) => it.type === "tag" && it.tagName === "td")
            .map((it) => (0, cheerio_2.getCheerioText)(it, 1)),
    ])
        .get();
}, dorm_1.MOCK_ELE_PAY_RECORD);
exports.getElePayRecord = getElePayRecord;
const getEleRemainder = async (helper) => (0, core_1.roamingWrapperWithMocks)(helper, "myhome", "", async () => {
    const $ = await (0, network_1.uFetch)(strings_1.ELE_REMAINDER_URL).then(cheerio_1.default.load);
    if ($("#net_Default_LoginCtrl1_txtUserName").length === 1)
        throw new error_1.EleError();
    return Number($("#Netweb_Home_electricity_DetailCtrl1_lblele").text().trim());
}, dorm_1.MOCK_ELE_REMAINDER);
exports.getEleRemainder = getEleRemainder;
//# sourceMappingURL=dorm.js.map