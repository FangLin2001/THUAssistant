"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNewsDetail = exports.getNewsList = void 0;
const core_1 = require("../lib/core");
const network_1 = require("../utils/network");
const strings_1 = require("../constants/strings");
const newsHtml_1 = require("../mocks/source/newsHtml");
const cheerio_1 = __importDefault(require("cheerio"));
/**
 * Get News List
 * @param helper
 * @param page
 * @param length
 * @param channel
 * @returns Array of NewsSlice
 */
const getNewsList = async (helper, page, length, channel) => {
    const newsList = [];
    const json = await (0, network_1.uFetch)(`${strings_1.NEWS_LIST_URL}&lmid=${channel !== null && channel !== void 0 ? channel : "all"}&currentPage=${page}&length=${length}&_csrf=${await (0, core_1.getCsrfToken)()}`);
    const data = JSON.parse(json);
    data.object.dataList.forEach(element => {
        newsList.push({
            name: parseXmlEscape(element.bt),
            url: parseXmlEscape(element.url),
            date: element.time,
            source: element.dwmc,
            channel: element.lmid
        });
    });
    return newsList;
};
exports.getNewsList = getNewsList;
const policyList = [
    ["jwcbg", [".TD4", "td[colspan=4]:not(td[height])"]],
    [
        "kybg",
        [".style1", "table[width='95%'][cellpadding='3'] tr:nth-child(3)"],
    ],
    ["gjc", [".style11", "[width='85%'] td"]],
    [
        "77726476706e69737468656265737421f2fa598421322653770bc7b88b5c2d32530b094045c3bd5cabf3",
        [".TD1", "td[colspan=4]:not(td[height])"],
    ],
    [
        "77726476706e69737468656265737421e0f852882e3e6e5f301c9aa596522b2043f84ba24ebecaf8",
        [".cont_doc_box h5 span", "div.field-item"],
    ],
    [
        "77726476706e69737468656265737421e9fd528569336153301c9aa596522b20735d12f268e561f0",
        [
            "h3",
            "[style='text-align:left; width:90%; magin:0px auto; padding-top:20px;  padding-bottom:20px;word-break:break-all;']",
        ],
    ],
    [
        "77726476706e69737468656265737421f8e60f8834396657761d88e29d51367b523e",
        ["h1", ".r_cont > ul"],
    ],
    [
        "77726476706e69737468656265737421e8ef439b69336153301c9aa596522b20e1a870705b76e399",
        ["", ".td4"],
    ],
    ["rscbg", ["[height=40]", "[width='95%'] > tr:nth-child(3)"]],
    [
        "77726476706e69737468656265737421e7e056d234297b437c0bc7b88b5c2d3212b31e4d37621d4714d6",
        ["", "[style='text-align:left']"],
    ],
    ["ghxt", ["", "[valign=top]:not([class])"]],
    [
        "fgc",
        [
            ".title_b",
            "[style='width:647px;margin-left:6px;font-size:13px;line-height:20px;text-align:justify']",
        ],
    ],
    [
        "77726476706e69737468656265737421e8e442d23323615e79009cadd6502720f9b87b",
        [
            ".bt",
            ".xqbox",
        ],
    ],
    [
        "77726476706e69737468656265737421e4ff459d207e6b597d469dbf915b243de94c4812e5c2e1599f",
        [
            ".TD_right > font",
            "td[colspan=4]:not(td[height])",
        ],
    ],
    [
        "jdbsc",
        [
            ".TD1",
            "[width=95%]:nth-child(2) > tr:nth-child(1)",
        ],
    ],
];
const getNewsDetailPolicy = (url) => {
    for (let i = 0; i < policyList.length; ++i) {
        if (url.indexOf(policyList[i][0]) !== -1) {
            return policyList[i][1];
        }
    }
    return [undefined, undefined];
};
const parseXmlEscape = (text) => {
    let result = text.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&amp;/g, "&").replace(/&apos;/g, "'").replace(/&quot;/g, "\"").replace(/&nbsp;/g, " ");
    const matches = result.match(/&#[0-9]+;/g);
    if (!matches)
        return result;
    matches.forEach(m => {
        var _a;
        const number = (_a = /[0-9]+/.exec(m)) === null || _a === void 0 ? void 0 : _a[0];
        const char = String.fromCharCode(Number(number));
        result = result.replace(m, char);
    });
    return result;
};
const handleNewApiNews = async (url) => {
    var _a;
    const html = await (0, network_1.uFetch)(url);
    const csrf = await (0, core_1.getCsrfToken)();
    const xxid = (_a = /(?<=var xxid = ").*?(?=";)/.exec(html)) === null || _a === void 0 ? void 0 : _a[0];
    const resp = await (0, network_1.uFetch)(`${strings_1.NEWS_DETAIL_URL}?xxid=${xxid}&preview=false&_csrf=${csrf}`);
    const data = JSON.parse(resp);
    const title = parseXmlEscape(data.object.xxDto.bt);
    let content = "<div>" + parseXmlEscape(data.object.xxDto.nr);
    if (data.object.xxDto.fjs_template) {
        data.object.xxDto.fjs_template.forEach(file => {
            content += `<a href="${strings_1.FILE_DOWNLOAD_URL + file.wjid}?_csrf=${csrf}">${file.wjmc}</a>`;
        });
    }
    content += "</div>";
    const jianjie = parseXmlEscape(data.object.xxDto.nr).replace(/<[^>]+>/g, "");
    return [title, content, jianjie];
};
const getNewsDetail = async (helper, url) => {
    if (url.includes("xxid"))
        return await handleNewApiNews(strings_1.NEWS_REDIRECT_URL + url);
    else
        return await getNewsDetailOld(helper, await (0, network_1.getRedirectUrl)(strings_1.NEWS_REDIRECT_URL + url));
};
exports.getNewsDetail = getNewsDetail;
const getNewsDetailOld = async (helper, url) => {
    var _a, _b;
    const [title, content] = getNewsDetailPolicy(url);
    const html = helper.mocked() ? (_a = newsHtml_1.newsHtml[url]) !== null && _a !== void 0 ? _a : "" : await (0, network_1.uFetch)(url);
    if (title !== undefined && content) {
        const r = (0, cheerio_1.default)(content, html);
        return [
            (0, cheerio_1.default)(title, html).text(),
            (_b = r.html()) !== null && _b !== void 0 ? _b : "",
            r.text().replace(/\s/g, ""),
        ];
    }
    else {
        return ["", html, ""];
    }
};
//# sourceMappingURL=news.js.map