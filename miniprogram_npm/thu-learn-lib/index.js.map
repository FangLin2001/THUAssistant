{"version":3,"sources":["index.js","urls.js","types.js","utils.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA,AENA;AHUA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Learn2018Helper_provider, _Learn2018Helper_rawFetch, _Learn2018Helper_myFetch, _Learn2018Helper_myFetchWithToken, _Learn2018Helper_csrfToken, _Learn2018Helper_withReAuth;\nvar __TEMP__ = require('cheerio');var cheerio = __REQUIRE_WILDCARD__(__TEMP__);\nvar __TEMP__ = require('js-base64');var Base64 = __TEMP__['Base64'];\nvar __TEMP__ = require('cross-fetch');var fetch = __REQUIRE_DEFAULT__(__TEMP__);\nvar __TEMP__ = require('./urls.js');var URL = __REQUIRE_WILDCARD__(__TEMP__);\nvar __TEMP__ = require('./types.js');var ContentType = __TEMP__['ContentType'];var FailReason = __TEMP__['FailReason'];var CourseType = __TEMP__['CourseType'];\nvar __TEMP__ = require('./utils.js');var decodeHTML = __TEMP__['decodeHTML'];var mapGradeToLevel = __TEMP__['mapGradeToLevel'];var parseSemesterType = __TEMP__['parseSemesterType'];var trimAndDefine = __TEMP__['trimAndDefine'];var JSONP_EXTRACTOR_NAME = __TEMP__['JSONP_EXTRACTOR_NAME'];var extractJSONPResult = __TEMP__['extractJSONPResult'];\n// .d.ts files are in types/\nvar __TEMP__ = require('real-isomorphic-fetch');var IsomorphicFetch = __REQUIRE_DEFAULT__(__TEMP__);\nvar __TEMP__ = require('tough-cookie-no-native');var tough = __REQUIRE_DEFAULT__(__TEMP__);\nconst CHEERIO_CONFIG = {\n    _useHtmlParser2: true,\n    decodeEntities: false,\n};\nconst $ = (html) => {\n    /* eslint-disable */\n    // `cheerio.load` has two prototypes:\n    // 1. `(html: string | Buffer, options?: CheerioParserOptions | undefined): Root`\n    // 2. `(element: Element | Element[], options?: CheerioParserOptions | undefined): Root`\n    // TypeScript cannot handle this, so we must workaround this.\n    // @ts-ignore: No overload matches this call\n    return cheerio.load(html, CHEERIO_CONFIG);\n    /* eslint-enable */\n};\nconst noLogin = (res) => res.url.includes('login_timeout') || res.status == 403;\n/** add CSRF token to any request URL as parameters */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var addCSRFTokenToUrl = exports.addCSRFTokenToUrl = (url, token) => {\n    if (url.includes('?')) {\n        url += `&_csrf=${token}`;\n    }\n    else {\n        url += `?_csrf=${token}`;\n    }\n    return url;\n};\n/** the main helper class */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });class Learn2018Helper {\n    /** you can provide a CookieJar and / or CredentialProvider in the configuration */\n    constructor(config) {\n        var _a, _b;\n        _Learn2018Helper_provider.set(this, void 0);\n        _Learn2018Helper_rawFetch.set(this, void 0);\n        _Learn2018Helper_myFetch.set(this, void 0);\n        _Learn2018Helper_myFetchWithToken.set(this, async (...args) => {\n            if (__classPrivateFieldGet(this, _Learn2018Helper_csrfToken, \"f\") == '') {\n                await this.login();\n            }\n            const [url, ...remaining] = args;\n            return __classPrivateFieldGet(this, _Learn2018Helper_myFetch, \"f\").call(this, addCSRFTokenToUrl(url, __classPrivateFieldGet(this, _Learn2018Helper_csrfToken, \"f\")), ...remaining);\n        });\n        _Learn2018Helper_csrfToken.set(this, '');\n        _Learn2018Helper_withReAuth.set(this, (rawFetch) => {\n            const login = this.login.bind(this);\n            return async function wrappedFetch(...args) {\n                const retryAfterLogin = async () => {\n                    await login();\n                    return await rawFetch(...args).then((res) => {\n                        if (noLogin(res)) {\n                            return Promise.reject({\n                                reason: FailReason.NOT_LOGGED_IN,\n                            });\n                        }\n                        else if (res.status != 200) {\n                            return Promise.reject({\n                                reason: FailReason.UNEXPECTED_STATUS,\n                                extra: {\n                                    code: res.status,\n                                    text: res.statusText,\n                                },\n                            });\n                        }\n                        else {\n                            return res;\n                        }\n                    });\n                };\n                return await rawFetch(...args).then((res) => (noLogin(res) ? retryAfterLogin() : res));\n            };\n        });\n        this.previewFirstPage = (_a = config === null || config === void 0 ? void 0 : config.generatePreviewUrlForFirstPage) !== null && _a !== void 0 ? _a : true;\n        this.cookieJar = (_b = config === null || config === void 0 ? void 0 : config.cookieJar) !== null && _b !== void 0 ? _b : new tough.CookieJar();\n        __classPrivateFieldSet(this, _Learn2018Helper_provider, config === null || config === void 0 ? void 0 : config.provider, \"f\");\n        __classPrivateFieldSet(this, _Learn2018Helper_rawFetch, new IsomorphicFetch(fetch, this.cookieJar), \"f\");\n        __classPrivateFieldSet(this, _Learn2018Helper_myFetch, __classPrivateFieldGet(this, _Learn2018Helper_provider, \"f\")\n            ? __classPrivateFieldGet(this, _Learn2018Helper_withReAuth, \"f\").call(this, __classPrivateFieldGet(this, _Learn2018Helper_rawFetch, \"f\"))\n            : async (...args) => {\n                const result = await __classPrivateFieldGet(this, _Learn2018Helper_rawFetch, \"f\").call(this, ...args);\n                if (noLogin(result))\n                    return Promise.reject({\n                        reason: FailReason.NOT_LOGGED_IN,\n                    });\n                return result;\n            }, \"f\");\n    }\n    /** fetch CSRF token from helper (invalid after login / re-login), might be '' if not logged in */\n    getCSRFToken() {\n        return __classPrivateFieldGet(this, _Learn2018Helper_csrfToken, \"f\");\n    }\n    /** login is necessary if you do not provide a `CredentialProvider` */\n    async login(username, password) {\n        if (!username || !password) {\n            if (!__classPrivateFieldGet(this, _Learn2018Helper_provider, \"f\"))\n                return Promise.reject({\n                    reason: FailReason.NO_CREDENTIAL,\n                });\n            const credential = await __classPrivateFieldGet(this, _Learn2018Helper_provider, \"f\").call(this);\n            username = credential.username;\n            password = credential.password;\n        }\n        const ticketResponse = await __classPrivateFieldGet(this, _Learn2018Helper_rawFetch, \"f\").call(this, URL.ID_LOGIN(), {\n            body: URL.ID_LOGIN_FORM_DATA(username, password),\n            method: 'POST',\n        });\n        if (!ticketResponse.ok) {\n            return Promise.reject({\n                reason: FailReason.ERROR_FETCH_FROM_ID,\n            });\n        }\n        // check response from id.tsinghua.edu.cn\n        const ticketResult = await ticketResponse.text();\n        const body = $(ticketResult);\n        const targetURL = body('a').attr('href');\n        const ticket = targetURL.split('=').slice(-1)[0];\n        if (ticket === 'BAD_CREDENTIALS') {\n            return Promise.reject({\n                reason: FailReason.BAD_CREDENTIAL,\n            });\n        }\n        const loginResponse = await __classPrivateFieldGet(this, _Learn2018Helper_rawFetch, \"f\").call(this, URL.LEARN_AUTH_ROAM(ticket));\n        if (loginResponse.ok !== true) {\n            return Promise.reject({\n                reason: FailReason.ERROR_ROAMING,\n            });\n        }\n        const courseListPageSource = await (await __classPrivateFieldGet(this, _Learn2018Helper_rawFetch, \"f\").call(this, URL.LEARN_STUDENT_COURSE_LIST_PAGE())).text();\n        const tokenRegex = /^.*&_csrf=(\\S*)\".*$/gm;\n        const matches = [...courseListPageSource.matchAll(tokenRegex)];\n        if (matches.length == 0) {\n            return Promise.reject({\n                reason: FailReason.INVALID_RESPONSE,\n                extra: 'cannot fetch CSRF token from source',\n            });\n        }\n        __classPrivateFieldSet(this, _Learn2018Helper_csrfToken, matches[0][1], \"f\");\n    }\n    /**  logout (to make everyone happy) */\n    async logout() {\n        await __classPrivateFieldGet(this, _Learn2018Helper_rawFetch, \"f\").call(this, URL.LEARN_LOGOUT(), { method: 'POST' });\n    }\n    /**\n     * Get calendar items during the specified period (in yyyymmdd format).\n     * @param startDate start date (inclusive)\n     * @param endDate end date (inclusive)\n     * If the API returns any error, this function will throw `FailReason.INVALID_RESPONSE`,\n     * and we currently observe a limit of no more that 29 days.\n     * Otherwise it will return the parsed data (might be empty if the period is too far away from now)\n     */\n    async getCalendar(startDate, endDate, graduate = false) {\n        const ticketResponse = await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.REGISTRAR_TICKET(), {\n            method: 'POST',\n            body: URL.REGISTRAR_TICKET_FORM_DATA(),\n        });\n        let ticket = (await ticketResponse.text());\n        ticket = ticket.substring(1, ticket.length - 1);\n        await __classPrivateFieldGet(this, _Learn2018Helper_myFetch, \"f\").call(this, URL.REGISTRAR_AUTH(ticket));\n        const response = await __classPrivateFieldGet(this, _Learn2018Helper_myFetch, \"f\").call(this, URL.REGISTRAR_CALENDAR(startDate, endDate, graduate, JSONP_EXTRACTOR_NAME));\n        if (!response.ok) {\n            return Promise.reject({\n                reason: FailReason.INVALID_RESPONSE,\n            });\n        }\n        const result = extractJSONPResult(await response.text());\n        return result.map((i) => ({\n            location: i.dd,\n            status: i.fl,\n            startTime: i.kssj,\n            endTime: i.jssj,\n            date: i.nq,\n            courseName: i.nr,\n        }));\n    }\n    async getSemesterIdList() {\n        const json = await (await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.LEARN_SEMESTER_LIST())).json();\n        if (!Array.isArray(json)) {\n            return Promise.reject({\n                reason: FailReason.INVALID_RESPONSE,\n                extra: json,\n            });\n        }\n        const semesters = json;\n        // sometimes web learning returns null, so confusing...\n        return semesters.filter((s) => s != null);\n    }\n    async getCurrentSemester() {\n        const json = await (await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.LEARN_CURRENT_SEMESTER())).json();\n        if (json.message !== 'success') {\n            return Promise.reject({\n                reason: FailReason.INVALID_RESPONSE,\n                extra: json,\n            });\n        }\n        const result = json.result;\n        return {\n            id: result.id,\n            startDate: new Date(result.kssj),\n            endDate: new Date(result.jssj),\n            startYear: Number(result.xnxq.slice(0, 4)),\n            endYear: Number(result.xnxq.slice(5, 9)),\n            type: parseSemesterType(Number(result.xnxq.slice(10, 11))),\n        };\n    }\n    /** get all courses in the specified semester */\n    async getCourseList(semesterID, courseType = CourseType.STUDENT) {\n        var _a;\n        const json = await (await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.LEARN_COURSE_LIST(semesterID, courseType))).json();\n        if (json.message !== 'success' || !Array.isArray(json.resultList)) {\n            return Promise.reject({\n                reason: FailReason.INVALID_RESPONSE,\n                extra: json,\n            });\n        }\n        const result = ((_a = json.resultList) !== null && _a !== void 0 ? _a : []);\n        const courses = [];\n        await Promise.all(result.map(async (c) => {\n            var _a;\n            courses.push({\n                id: c.wlkcid,\n                name: c.kcm,\n                englishName: c.ywkcm,\n                timeAndLocation: await (await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.LEARN_COURSE_TIME_LOCATION(c.wlkcid))).json(),\n                url: URL.LEARN_COURSE_URL(c.wlkcid, courseType),\n                teacherName: (_a = c.jsm) !== null && _a !== void 0 ? _a : '',\n                teacherNumber: c.jsh,\n                courseNumber: c.kch,\n                courseIndex: Number(c.kxh),\n                courseType,\n            });\n        }));\n        return courses;\n    }\n    /**\n     * Get certain type of content of all specified courses.\n     * It actually wraps around other `getXXX` functions. You can ignore the failure caused by certain courses.\n     */\n    async getAllContents(courseIDs, type, courseType = CourseType.STUDENT, allowFailure = false) {\n        let fetchFunc;\n        switch (type) {\n            case ContentType.NOTIFICATION:\n                fetchFunc = this.getNotificationList;\n                break;\n            case ContentType.FILE:\n                fetchFunc = this.getFileList;\n                break;\n            case ContentType.HOMEWORK:\n                fetchFunc = this.getHomeworkList;\n                break;\n            case ContentType.DISCUSSION:\n                fetchFunc = this.getDiscussionList;\n                break;\n            case ContentType.QUESTION:\n                fetchFunc = this.getAnsweredQuestionList;\n                break;\n        }\n        const contents = {};\n        const results = await Promise.allSettled(courseIDs.map(async (id) => {\n            contents[id] = await fetchFunc.bind(this)(id, courseType);\n        }));\n        if (!allowFailure) {\n            for (const r of results) {\n                if (r.status == 'rejected') {\n                    return Promise.reject({\n                        reason: FailReason.INVALID_RESPONSE,\n                        extra: {\n                            reason: r.reason,\n                        },\n                    });\n                }\n            }\n        }\n        return contents;\n    }\n    /** Get all notifications （课程公告） of the specified course. */\n    async getNotificationList(courseID, courseType = CourseType.STUDENT) {\n        var _a, _b, _c, _d;\n        const json = await (await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.LEARN_NOTIFICATION_LIST(courseID, courseType))).json();\n        if (json.result !== 'success') {\n            return Promise.reject({\n                reason: FailReason.INVALID_RESPONSE,\n                extra: json,\n            });\n        }\n        const result = ((_d = (_b = (_a = json.object) === null || _a === void 0 ? void 0 : _a.aaData) !== null && _b !== void 0 ? _b : (_c = json.object) === null || _c === void 0 ? void 0 : _c.resultsList) !== null && _d !== void 0 ? _d : []);\n        const notifications = [];\n        await Promise.all(result.map(async (n) => {\n            var _a;\n            const notification = {\n                id: n.ggid,\n                content: decodeHTML(Base64.decode((_a = n.ggnr) !== null && _a !== void 0 ? _a : '')),\n                title: decodeHTML(n.bt),\n                url: URL.LEARN_NOTIFICATION_DETAIL(courseID, n.ggid, courseType),\n                publisher: n.fbrxm,\n                hasRead: n.sfyd === '是',\n                markedImportant: Number(n.sfqd) === 1,\n                publishTime: new Date(n.fbsj && typeof n.fbsj === 'string' ? n.fbsj : n.fbsjStr),\n            };\n            let detail = {};\n            const attachmentName = courseType === CourseType.STUDENT ? n.fjmc : n.fjbt;\n            if (attachmentName) {\n                detail = await this.parseNotificationDetail(courseID, notification.id, courseType, attachmentName);\n            }\n            notifications.push({ ...notification, ...detail });\n        }));\n        return notifications;\n    }\n    /** Get all files （课程文件） of the specified course. */\n    async getFileList(courseID, courseType = CourseType.STUDENT) {\n        var _a;\n        const json = await (await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.LEARN_FILE_LIST(courseID, courseType))).json();\n        if (json.result !== 'success') {\n            return Promise.reject({\n                reason: FailReason.INVALID_RESPONSE,\n                extra: json,\n            });\n        }\n        let result = [];\n        if (Array.isArray((_a = json.object) === null || _a === void 0 ? void 0 : _a.resultsList)) {\n            // teacher\n            result = json.object.resultsList;\n        }\n        else if (Array.isArray(json.object)) {\n            // student\n            result = json.object;\n        }\n        const files = [];\n        await Promise.all(result.map(async (f) => {\n            var _a, _b;\n            const title = decodeHTML(f.bt);\n            const downloadUrl = URL.LEARN_FILE_DOWNLOAD(courseType === CourseType.STUDENT ? f.wjid : f.id, courseType, courseID);\n            const previewUrl = URL.LEARN_FILE_PREVIEW(ContentType.FILE, f.wjid, courseType, this.previewFirstPage);\n            files.push({\n                id: f.wjid,\n                title: decodeHTML(f.bt),\n                description: decodeHTML(f.ms),\n                rawSize: f.wjdx,\n                size: f.fileSize,\n                uploadTime: new Date(f.scsj),\n                downloadUrl,\n                previewUrl,\n                isNew: f.isNew,\n                markedImportant: f.sfqd === 1,\n                visitCount: (_a = f.llcs) !== null && _a !== void 0 ? _a : 0,\n                downloadCount: (_b = f.xzcs) !== null && _b !== void 0 ? _b : 0,\n                fileType: f.wjlx,\n                remoteFile: {\n                    id: f.wjid,\n                    name: title,\n                    downloadUrl,\n                    previewUrl,\n                    size: f.fileSize,\n                },\n            });\n        }));\n        return files;\n    }\n    /** Get all homeworks （课程作业） of the specified course (support student version only). */\n    async getHomeworkList(courseID, courseType = CourseType.STUDENT) {\n        if (courseType === CourseType.TEACHER) {\n            return Promise.reject({\n                reason: FailReason.NOT_IMPLEMENTED,\n                extra: 'currently getting homework list of TA courses is not supported',\n            });\n        }\n        const allHomework = [];\n        await Promise.all(URL.LEARN_HOMEWORK_LIST_SOURCE(courseID).map(async (s) => {\n            const homeworks = await this.getHomeworkListAtUrl(s.url, s.status);\n            allHomework.push(...homeworks);\n        }));\n        return allHomework;\n    }\n    /** Get all discussions （课程讨论） of the specified course. */\n    async getDiscussionList(courseID, courseType = CourseType.STUDENT) {\n        var _a, _b;\n        const json = await (await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.LEARN_DISCUSSION_LIST(courseID, courseType))).json();\n        if (json.result !== 'success') {\n            return Promise.reject({\n                reason: FailReason.INVALID_RESPONSE,\n                extra: json,\n            });\n        }\n        const result = ((_b = (_a = json.object) === null || _a === void 0 ? void 0 : _a.resultsList) !== null && _b !== void 0 ? _b : []);\n        const discussions = [];\n        await Promise.all(result.map(async (d) => {\n            discussions.push({\n                ...this.parseDiscussionBase(d),\n                boardId: d.bqid,\n                url: URL.LEARN_DISCUSSION_DETAIL(d.wlkcid, d.bqid, d.id, courseType),\n            });\n        }));\n        return discussions;\n    }\n    /**\n     * Get all notifications （课程答疑） of the specified course.\n     * The student version supports only answered questions, while the teacher version supports all questions.\n     */\n    async getAnsweredQuestionList(courseID, courseType = CourseType.STUDENT) {\n        var _a, _b;\n        const json = await (await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.LEARN_QUESTION_LIST_ANSWERED(courseID, courseType))).json();\n        if (json.result !== 'success') {\n            return Promise.reject({\n                reason: FailReason.INVALID_RESPONSE,\n                extra: json,\n            });\n        }\n        const result = ((_b = (_a = json.object) === null || _a === void 0 ? void 0 : _a.resultsList) !== null && _b !== void 0 ? _b : []);\n        const questions = [];\n        await Promise.all(result.map(async (q) => {\n            questions.push({\n                ...this.parseDiscussionBase(q),\n                question: Base64.decode(q.wtnr),\n                url: URL.LEARN_QUESTION_DETAIL(q.wlkcid, q.id, courseType),\n            });\n        }));\n        return questions;\n    }\n    async getHomeworkListAtUrl(url, status) {\n        var _a, _b;\n        const json = await (await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, url)).json();\n        if (json.result !== 'success') {\n            return Promise.reject({\n                reason: FailReason.INVALID_RESPONSE,\n                extra: json,\n            });\n        }\n        const result = ((_b = (_a = json.object) === null || _a === void 0 ? void 0 : _a.aaData) !== null && _b !== void 0 ? _b : []);\n        const homeworks = [];\n        await Promise.all(result.map(async (h) => {\n            homeworks.push({\n                id: h.zyid,\n                studentHomeworkId: h.xszyid,\n                title: decodeHTML(h.bt),\n                url: URL.LEARN_HOMEWORK_DETAIL(h.wlkcid, h.zyid, h.xszyid),\n                deadline: new Date(h.jzsj),\n                submitUrl: URL.LEARN_HOMEWORK_SUBMIT(h.wlkcid, h.xszyid),\n                submitTime: h.scsj === null ? undefined : new Date(h.scsj),\n                grade: h.cj === null ? undefined : h.cj,\n                gradeLevel: mapGradeToLevel(h.cj),\n                graderName: trimAndDefine(h.jsm),\n                gradeContent: trimAndDefine(h.pynr),\n                gradeTime: h.pysj === null ? undefined : new Date(h.pysj),\n                ...status,\n                ...(await this.parseHomeworkDetail(h.wlkcid, h.zyid, h.xszyid)),\n            });\n        }));\n        return homeworks;\n    }\n    async parseNotificationDetail(courseID, id, courseType, attachmentName) {\n        /// from JSON (backup, currently not used)\n        // const postParams = new FormData();\n        // postParams.append('id', id);\n        // postParams.append('wlkcid', courseID);\n        // const metadata = await (await this.#myFetchWithToken(URL.LEARN_NOTIFICATION_EDIT(courseType), {\n        //   'method': 'POST',\n        //   'body': postParams,\n        // })).json();\n        // const attachmentId = metadata.ggfjid as string;\n        /// parsed from HTML\n        const response = await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.LEARN_NOTIFICATION_DETAIL(courseID, id, courseType));\n        const result = $(await response.text());\n        let path = '';\n        if (courseType === CourseType.STUDENT) {\n            path = result('.ml-10').attr('href');\n        }\n        else {\n            path = result('#wjid').attr('href');\n        }\n        const size = trimAndDefine(result('div#attachment > div.fl > span[class^=\"color\"]').first().text());\n        const params = new URLSearchParams(path.split('?').slice(-1)[0]);\n        const attachmentId = params.get('wjid');\n        if (!path.startsWith(URL.LEARN_PREFIX)) {\n            path = URL.LEARN_PREFIX + path;\n        }\n        return {\n            attachment: {\n                name: attachmentName,\n                id: attachmentId,\n                downloadUrl: path,\n                previewUrl: URL.LEARN_FILE_PREVIEW(ContentType.NOTIFICATION, attachmentId, courseType, this.previewFirstPage),\n                size,\n            },\n        };\n    }\n    async parseHomeworkDetail(courseID, id, studentHomeworkID) {\n        const response = await __classPrivateFieldGet(this, _Learn2018Helper_myFetchWithToken, \"f\").call(this, URL.LEARN_HOMEWORK_DETAIL(courseID, id, studentHomeworkID));\n        const result = $(await response.text());\n        const fileDivs = result('div.list.fujian.clearfix');\n        return {\n            description: trimAndDefine(result('div.list.calendar.clearfix > div.fl.right > div.c55').slice(0, 1).html()),\n            answerContent: trimAndDefine(result('div.list.calendar.clearfix > div.fl.right > div.c55').slice(1, 2).html()),\n            submittedContent: trimAndDefine($(result('div.boxbox').slice(1, 2).toArray())('div.right').slice(2, 3).html()),\n            attachment: this.parseHomeworkFile(fileDivs[0]),\n            answerAttachment: this.parseHomeworkFile(fileDivs[1]),\n            submittedAttachment: this.parseHomeworkFile(fileDivs[2]),\n            gradeAttachment: this.parseHomeworkFile(fileDivs[3]),\n        };\n    }\n    parseHomeworkFile(fileDiv) {\n        var _a;\n        const fileNode = ((_a = $(fileDiv)('.ftitle').children('a')[0]) !== null && _a !== void 0 ? _a : $(fileDiv)('.fl').children('a')[0]);\n        if (fileNode !== undefined) {\n            const size = trimAndDefine($(fileDiv)('.fl > span[class^=\"color\"]').first().text());\n            const params = new URLSearchParams(fileNode.attribs.href.split('?').slice(-1)[0]);\n            const attachmentId = params.get('fileId');\n            // so dirty here...\n            let downloadUrl = URL.LEARN_PREFIX + fileNode.attribs.href;\n            if (params.has('downloadUrl')) {\n                downloadUrl = URL.LEARN_PREFIX + params.get('downloadUrl');\n            }\n            return {\n                id: attachmentId,\n                name: fileNode.children[0].data,\n                downloadUrl,\n                previewUrl: URL.LEARN_FILE_PREVIEW(ContentType.HOMEWORK, attachmentId, CourseType.STUDENT, this.previewFirstPage),\n                size,\n            };\n        }\n        else {\n            return undefined;\n        }\n    }\n    parseDiscussionBase(d) {\n        var _a;\n        return {\n            id: d.id,\n            title: decodeHTML(d.bt),\n            publisherName: d.fbrxm,\n            publishTime: new Date(d.fbsj),\n            lastReplyTime: new Date(d.zhhfsj),\n            lastReplierName: d.zhhfrxm,\n            visitCount: (_a = d.djs) !== null && _a !== void 0 ? _a : 0,\n            replyCount: d.hfcs,\n        };\n    }\n};exports.Learn2018Helper = Learn2018Helper\n_Learn2018Helper_provider = new WeakMap(), _Learn2018Helper_rawFetch = new WeakMap(), _Learn2018Helper_myFetch = new WeakMap(), _Learn2018Helper_myFetchWithToken = new WeakMap(), _Learn2018Helper_csrfToken = new WeakMap(), _Learn2018Helper_withReAuth = new WeakMap();\n","var __TEMP__ = require('form-data');var FormData = __REQUIRE_DEFAULT__(__TEMP__);\nvar __TEMP__ = require('./types.js');var CourseType = __TEMP__['CourseType'];\nvar __TEMP__ = require('./utils.js');var getMkFromType = __TEMP__['getMkFromType'];\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_PREFIX = exports.LEARN_PREFIX = 'https://learn.tsinghua.edu.cn';\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var REGISTRAR_PREFIX = exports.REGISTRAR_PREFIX = 'https://zhjw.cic.tsinghua.edu.cn';\nconst MAX_SIZE = 200;\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var ID_LOGIN = exports.ID_LOGIN = () => {\n    return 'https://id.tsinghua.edu.cn/do/off/ui/auth/login/post/bb5df85216504820be7bba2b0ae1535b/0?/login.do';\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var ID_LOGIN_FORM_DATA = exports.ID_LOGIN_FORM_DATA = (username, password) => {\n    const credential = new FormData();\n    credential.append('i_user', username);\n    credential.append('i_pass', password);\n    credential.append('atOnce', String(true));\n    return credential;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_AUTH_ROAM = exports.LEARN_AUTH_ROAM = (ticket) => {\n    return `${LEARN_PREFIX}/b/j_spring_security_thauth_roaming_entry?ticket=${ticket}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_LOGOUT = exports.LEARN_LOGOUT = () => {\n    return `${LEARN_PREFIX}/f/j_spring_security_logout`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_STUDENT_COURSE_LIST_PAGE = exports.LEARN_STUDENT_COURSE_LIST_PAGE = () => {\n    return `${LEARN_PREFIX}/f/wlxt/index/course/student/`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_SEMESTER_LIST = exports.LEARN_SEMESTER_LIST = () => {\n    return `${LEARN_PREFIX}/b/wlxt/kc/v_wlkc_xs_xktjb_coassb/queryxnxq`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_CURRENT_SEMESTER = exports.LEARN_CURRENT_SEMESTER = () => {\n    return `${LEARN_PREFIX}/b/kc/zhjw_v_code_xnxq/getCurrentAndNextSemester`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_COURSE_LIST = exports.LEARN_COURSE_LIST = (semester, courseType) => {\n    if (courseType === CourseType.STUDENT) {\n        return `${LEARN_PREFIX}/b/wlxt/kc/v_wlkc_xs_xkb_kcb_extend/student/loadCourseBySemesterId/${semester}`;\n    }\n    else {\n        return `${LEARN_PREFIX}/b/kc/v_wlkc_kcb/queryAsorCoCourseList/${semester}/0`;\n    }\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_COURSE_URL = exports.LEARN_COURSE_URL = (courseID, courseType) => {\n    return `${LEARN_PREFIX}/f/wlxt/index/course/${courseType}/course?wlkcid=${courseID}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_COURSE_TIME_LOCATION = exports.LEARN_COURSE_TIME_LOCATION = (courseID) => {\n    return `${LEARN_PREFIX}/b/kc/v_wlkc_xk_sjddb/detail?id=${courseID}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_TEACHER_COURSE_URL = exports.LEARN_TEACHER_COURSE_URL = (courseID) => {\n    return `${LEARN_PREFIX}/f/wlxt/index/course/teacher/course?wlkcid=${courseID}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_FILE_LIST = exports.LEARN_FILE_LIST = (courseID, courseType) => {\n    if (courseType === CourseType.STUDENT) {\n        return `${LEARN_PREFIX}/b/wlxt/kj/wlkc_kjxxb/student/kjxxbByWlkcidAndSizeForStudent?wlkcid=${courseID}&size=${MAX_SIZE}`;\n    }\n    else {\n        return `${LEARN_PREFIX}/b/wlxt/kj/v_kjxxb_wjwjb/teacher/queryByWlkcid?wlkcid=${courseID}&size=${MAX_SIZE}`;\n    }\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_FILE_DOWNLOAD = exports.LEARN_FILE_DOWNLOAD = (fileID, courseType, courseID) => {\n    if (courseType === CourseType.STUDENT) {\n        return `${LEARN_PREFIX}/b/wlxt/kj/wlkc_kjxxb/student/downloadFile?sfgk=0&wjid=${fileID}`;\n    }\n    else {\n        return `${LEARN_PREFIX}/f/wlxt/kj/wlkc_kjxxb/teacher/beforeView?id=${fileID}&wlkcid=${courseID}`;\n    }\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_FILE_PREVIEW = exports.LEARN_FILE_PREVIEW = (type, fileID, courseType, firstPageOnly = false) => {\n    return `${LEARN_PREFIX}/f/wlxt/kc/wj_wjb/${courseType}/beforePlay?wjid=${fileID}&mk=${getMkFromType(type)}&browser=-1&sfgk=0&pageType=${firstPageOnly ? 'first' : 'all'}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_NOTIFICATION_LIST = exports.LEARN_NOTIFICATION_LIST = (courseID, courseType) => {\n    if (courseType === CourseType.STUDENT) {\n        return `${LEARN_PREFIX}/b/wlxt/kcgg/wlkc_ggb/student/kcggListXs?wlkcid=${courseID}&size=${MAX_SIZE}`;\n    }\n    else {\n        return `${LEARN_PREFIX}/b/wlxt/kcgg/wlkc_ggb/teacher/kcggList?wlkcid=${courseID}&size=${MAX_SIZE}`;\n    }\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_NOTIFICATION_DETAIL = exports.LEARN_NOTIFICATION_DETAIL = (courseID, notificationID, courseType) => {\n    if (courseType === CourseType.STUDENT) {\n        return `${LEARN_PREFIX}/f/wlxt/kcgg/wlkc_ggb/student/beforeViewXs?wlkcid=${courseID}&id=${notificationID}`;\n    }\n    else {\n        return `${LEARN_PREFIX}/f/wlxt/kcgg/wlkc_ggb/teacher/beforeViewJs?wlkcid=${courseID}&id=${notificationID}`;\n    }\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_NOTIFICATION_EDIT = exports.LEARN_NOTIFICATION_EDIT = (courseType) => {\n    return `${LEARN_PREFIX}/b/wlxt/kcgg/wlkc_ggb/${courseType}/editKcgg`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_HOMEWORK_LIST_SOURCE = exports.LEARN_HOMEWORK_LIST_SOURCE = (courseID) => {\n    return [\n        {\n            url: LEARN_HOMEWORK_LIST_NEW(courseID),\n            status: {\n                submitted: false,\n                graded: false,\n            },\n        },\n        {\n            url: LEARN_HOMEWORK_LIST_SUBMITTED(courseID),\n            status: {\n                submitted: true,\n                graded: false,\n            },\n        },\n        {\n            url: LEARN_HOMEWORK_LIST_GRADED(courseID),\n            status: {\n                submitted: true,\n                graded: true,\n            },\n        },\n    ];\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_HOMEWORK_LIST_NEW = exports.LEARN_HOMEWORK_LIST_NEW = (courseID) => {\n    return `${LEARN_PREFIX}/b/wlxt/kczy/zy/student/index/zyListWj?wlkcid=${courseID}&size=${MAX_SIZE}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_HOMEWORK_LIST_SUBMITTED = exports.LEARN_HOMEWORK_LIST_SUBMITTED = (courseID) => {\n    return `${LEARN_PREFIX}/b/wlxt/kczy/zy/student/index/zyListYjwg?wlkcid=${courseID}&size=${MAX_SIZE}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_HOMEWORK_LIST_GRADED = exports.LEARN_HOMEWORK_LIST_GRADED = (courseID) => {\n    return `${LEARN_PREFIX}/b/wlxt/kczy/zy/student/index/zyListYpg?wlkcid=${courseID}&size=${MAX_SIZE}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_HOMEWORK_DETAIL = exports.LEARN_HOMEWORK_DETAIL = (courseID, homeworkID, studentHomeworkID) => {\n    return `${LEARN_PREFIX}/f/wlxt/kczy/zy/student/viewCj?wlkcid=${courseID}&zyid=${homeworkID}&xszyid=${studentHomeworkID}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_HOMEWORK_DOWNLOAD = exports.LEARN_HOMEWORK_DOWNLOAD = (courseID, attachmentID) => {\n    return `${LEARN_PREFIX}/b/wlxt/kczy/zy/student/downloadFile/${courseID}/${attachmentID}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_HOMEWORK_SUBMIT = exports.LEARN_HOMEWORK_SUBMIT = (courseID, studentHomeworkID) => {\n    return `${LEARN_PREFIX}/f/wlxt/kczy/zy/student/tijiao?wlkcid=${courseID}&xszyid=${studentHomeworkID}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_DISCUSSION_LIST = exports.LEARN_DISCUSSION_LIST = (courseID, courseType) => {\n    return `${LEARN_PREFIX}/b/wlxt/bbs/bbs_tltb/${courseType}/kctlList?wlkcid=${courseID}&size=${MAX_SIZE}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_DISCUSSION_DETAIL = exports.LEARN_DISCUSSION_DETAIL = (courseID, boardID, discussionID, courseType, tabId = 1) => {\n    return `${LEARN_PREFIX}/f/wlxt/bbs/bbs_tltb/${courseType}/viewTlById?wlkcid=${courseID}&id=${discussionID}&tabbh=${tabId}&bqid=${boardID}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_QUESTION_LIST_ANSWERED = exports.LEARN_QUESTION_LIST_ANSWERED = (courseID, courseType) => {\n    return `${LEARN_PREFIX}/b/wlxt/bbs/bbs_tltb/${courseType}/kcdyList?wlkcid=${courseID}&size=${MAX_SIZE}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var LEARN_QUESTION_DETAIL = exports.LEARN_QUESTION_DETAIL = (courseID, questionID, courseType) => {\n    if (courseType === CourseType.STUDENT) {\n        return `${LEARN_PREFIX}/f/wlxt/bbs/bbs_kcdy/student/viewDyById?wlkcid=${courseID}&id=${questionID}`;\n    }\n    else {\n        return `${LEARN_PREFIX}/f/wlxt/bbs/bbs_kcdy/teacher/beforeEditDy?wlkcid=${courseID}&id=${questionID}`;\n    }\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var REGISTRAR_TICKET_FORM_DATA = exports.REGISTRAR_TICKET_FORM_DATA = () => {\n    const form = new FormData();\n    form.append('appId', 'ALL_ZHJW');\n    return form;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var REGISTRAR_TICKET = exports.REGISTRAR_TICKET = () => {\n    return `${LEARN_PREFIX}/b/wlxt/common/auth/gnt`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var REGISTRAR_AUTH = exports.REGISTRAR_AUTH = (ticket) => {\n    return `${REGISTRAR_PREFIX}/j_acegi_login.do?url=/&ticket=${ticket}`;\n};\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var REGISTRAR_CALENDAR = exports.REGISTRAR_CALENDAR = (startDate, endDate, graduate = false, callbackName = 'unknown') => {\n    return `${REGISTRAR_PREFIX}/jxmh_out.do?m=${graduate ? 'yjs' : 'bks'}_jxrl_all&p_start_date=${startDate}&p_end_date=${endDate}&jsoncallback=${callbackName}`;\n};\n","if (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var FailReason = exports.FailReason = undefined;\n(function (FailReason) {\n    FailReason[\"NO_CREDENTIAL\"] = \"no credential provided\";\n    FailReason[\"ERROR_FETCH_FROM_ID\"] = \"could not fetch ticket from id.tsinghua.edu.cn\";\n    FailReason[\"BAD_CREDENTIAL\"] = \"bad credential\";\n    FailReason[\"ERROR_ROAMING\"] = \"could not roam to learn.tsinghua.edu.cn\";\n    FailReason[\"NOT_LOGGED_IN\"] = \"not logged in or login timeout\";\n    FailReason[\"NOT_IMPLEMENTED\"] = \"not implemented\";\n    FailReason[\"INVALID_RESPONSE\"] = \"invalid response\";\n    FailReason[\"UNEXPECTED_STATUS\"] = \"unexpected status\";\n})(FailReason || (FailReason = {}));\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var SemesterType = exports.SemesterType = undefined;\n(function (SemesterType) {\n    SemesterType[\"FALL\"] = \"\\u79CB\\u5B63\\u5B66\\u671F\";\n    SemesterType[\"SPRING\"] = \"\\u6625\\u5B63\\u5B66\\u671F\";\n    SemesterType[\"SUMMER\"] = \"\\u590F\\u5B63\\u5B66\\u671F\";\n    SemesterType[\"UNKNOWN\"] = \"\";\n})(SemesterType || (SemesterType = {}));\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var ContentType = exports.ContentType = undefined;\n(function (ContentType) {\n    ContentType[\"NOTIFICATION\"] = \"notification\";\n    ContentType[\"FILE\"] = \"file\";\n    ContentType[\"HOMEWORK\"] = \"homework\";\n    ContentType[\"DISCUSSION\"] = \"discussion\";\n    ContentType[\"QUESTION\"] = \"question\";\n})(ContentType || (ContentType = {}));\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var CourseType = exports.CourseType = undefined;\n(function (CourseType) {\n    CourseType[\"STUDENT\"] = \"student\";\n    CourseType[\"TEACHER\"] = \"teacher\";\n})(CourseType || (CourseType = {}));\n","var __TEMP__ = require('entities');var _decodeHTML = __TEMP__['decodeHTML'];\nvar __TEMP__ = require('./types.js');var SemesterType = __TEMP__['SemesterType'];var FailReason = __TEMP__['FailReason'];var ContentType = __TEMP__['ContentType'];\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function parseSemesterType(n) {\n    if (n === 1) {\n        return SemesterType.FALL;\n    }\n    else if (n === 2) {\n        return SemesterType.SPRING;\n    }\n    else if (n === 3) {\n        return SemesterType.SUMMER;\n    }\n    else {\n        return SemesterType.UNKNOWN;\n    }\n};exports.parseSemesterType = parseSemesterType\nconst CONTENT_TYPE_MK_MAP = new Map([\n    [ContentType.NOTIFICATION, 'kcgg'],\n    [ContentType.FILE, 'kcwj'],\n    [ContentType.HOMEWORK, 'kczy'],\n    [ContentType.DISCUSSION, ''],\n    [ContentType.QUESTION, ''],\n]);\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function getMkFromType(type) {\n    var _a;\n    return 'mk_' + ((_a = CONTENT_TYPE_MK_MAP.get(type)) !== null && _a !== void 0 ? _a : 'UNKNOWN');\n};exports.getMkFromType = getMkFromType\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function decodeHTML(html) {\n    const text = _decodeHTML(html);\n    // remove strange prefixes returned by web learning\n    return text.startsWith('\\xC2\\x9E\\xC3\\xA9\\x65')\n        ? text.substr(5)\n        : text.startsWith('\\x9E\\xE9\\x65')\n            ? text.substr(3)\n            : text.startsWith('\\xE9\\x65')\n                ? text.substr(2)\n                : text;\n};exports.decodeHTML = decodeHTML\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function trimAndDefine(text) {\n    if (text === undefined || text === null) {\n        return undefined;\n    }\n    const trimmed = text.trim();\n    return trimmed === '' ? undefined : decodeHTML(trimmed);\n};exports.trimAndDefine = trimAndDefine\nconst GRADE_LEVEL_MAP = new Map([\n    [-100, '已阅'],\n    [-99, 'A+'],\n    [-98, 'A'],\n    [-92, 'A-'],\n    [-87, 'B+'],\n    [-85, '优秀'],\n    [-82, 'B'],\n    [-78, 'B-'],\n    [-74, 'C+'],\n    [-71, 'C'],\n    [-68, 'C-'],\n    [-67, 'G'],\n    [-66, 'D+'],\n    [-64, 'D'],\n    [-65, '免课'],\n    [-63, 'P'],\n    [-62, 'EX'],\n    [-61, '免修'],\n    [-60, '通过'],\n    [-59, '不通过'],\n    [-55, 'W'],\n    [-51, 'I'],\n    [-50, '缓考'],\n    [-31, 'NA'],\n    [-30, 'F'],\n]);\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function mapGradeToLevel(grade) {\n    if (grade !== null && GRADE_LEVEL_MAP.has(grade)) {\n        return GRADE_LEVEL_MAP.get(grade);\n    }\n    else {\n        return undefined;\n    }\n};exports.mapGradeToLevel = mapGradeToLevel\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var JSONP_EXTRACTOR_NAME = exports.JSONP_EXTRACTOR_NAME = 'thu_learn_lib_jsonp_extractor';\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function extractJSONPResult(jsonp) {\n    // check jsonp format\n    if (!jsonp.startsWith(JSONP_EXTRACTOR_NAME)) {\n        throw FailReason.INVALID_RESPONSE;\n    }\n    // evaluate the result\n    return Function(`\"use strict\";const ${JSONP_EXTRACTOR_NAME}=(s)=>s;return ${jsonp};`)();\n};exports.extractJSONPResult = extractJSONPResult\n"]}